{"version":3,"sources":["components/Searchbar/Searchbar.jsx","services/searchPhotos.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","query","handleInput","currentTarget","setState","value","handleSumbit","e","preventDefault","trim","toast","error","props","onSubmit","className","this","type","autoComplete","onChange","autoFocus","placeholder","Component","requestApi","searchQuery","currentPage","axios","get","then","responce","data","total","hits","Promise","reject","Error","ImageGalleryItem","url","openModal","largeUrl","category","data-url","src","alt","onClick","ImageGallery","photos","openLargePhoto","map","photo","webformatURL","largeImageURL","id","Button","modalRoot","document","querySelector","Modal","handleKeyDown","key","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","App","showModal","isLoading","onChangeQuery","fetchPhotos","options","prevState","catch","finally","scrollDown","toggleModal","dataset","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","shouldRenderLoadMoreButton","length","color","height","width","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.48ba6e38.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nclass Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  handleInput = ({ currentTarget }) => {\n    this.setState({ query: currentTarget.value });\n  };\n\n  handleSumbit = e => {\n    e.preventDefault();\n\n    const { query } = this.state;\n\n    if (query.trim() === '') {\n      return toast.error('Please enter the key word');\n    }\n\n    this.props.onSubmit(query);\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSumbit}>\n          <button className=\"SearchForm-button\" type=\"submit\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <label>\n            <input\n              className=\"SearchForm-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              value={this.state.query}\n              onChange={this.handleInput}\n              autoFocus\n              placeholder=\"Search images\"\n            />\n          </label>\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import axios from 'axios';\n\nconst KEY = '19419978-f0acf28c61118c5b5b844fb84';\n\nconst requestApi = ({ searchQuery, currentPage }) => {\n  return axios\n    .get(\n      `https://pixabay.com/api/?key=${KEY}&q=${searchQuery}&page=${currentPage}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(responce => {\n      if (responce.data.total) {\n        return responce.data.hits;\n      }\n      return Promise.reject(new Error(`No photos of ${searchQuery}`));\n    });\n};\n\nexport default requestApi;\n","import PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({\n  url,\n  openModal,\n  largeUrl,\n  category,\n}) {\n  return (\n    <img\n      data-url={largeUrl}\n      src={url}\n      alt={category}\n      className=\"ImageGalleryItem-image\"\n      onClick={openModal}\n    />\n  );\n}\n\nImageGalleryItem.propTypes = {\n  url: PropTypes.string.isRequired,\n  openModal: PropTypes.func.isRequired,\n  largeUrl: PropTypes.string.isRequired,\n  category: PropTypes.string,\n};\n","import PropTypes, { shape } from 'prop-types';\n\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\n\nexport default function ImageGallery({ photos, openModal, openLargePhoto }) {\n  return (\n    <ul className=\"ImageGallery \">\n      {photos.map(photo => {\n        return (\n          <li\n            key={photo.id}\n            onClick={openLargePhoto}\n            className=\"ImageGalleryItem\"\n          >\n            <ImageGalleryItem\n              category={photo.category}\n              url={photo.webformatURL}\n              largeUrl={photo.largeImageURL}\n              openModal={openModal}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  photos: PropTypes.arrayOf(shape).isRequired,\n  openModal: PropTypes.func.isRequired,\n  openLargePhoto: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Button({ onClick }) {\n  return (\n    <button onClick={onClick} className=\"Button\" type=\"button\">\n      Load More\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = ({ key }) => {\n    if (key === 'Escape') {\n      this.props.onClose();\n    }\n  };\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={this.props.largeUrl} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;\n\nModal.propTypes = {\n  largeUrl: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './App.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport requestApi from './services/searchPhotos';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\n\nclass App extends Component {\n  state = {\n    photos: [],\n    currentPage: 1,\n    searchQuery: '',\n    showModal: false,\n    largeUrl: '',\n    error: null,\n    isLoading: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchPhotos();\n    }\n  }\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      photos: [],\n      error: null,\n    });\n  };\n\n  fetchPhotos = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = { searchQuery, currentPage };\n\n    this.setState({ isLoading: true });\n\n    requestApi(options)\n      .then(photos => {\n        this.setState(prevState => ({\n          photos: [...prevState.photos, ...photos],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => {\n        this.setState({ isLoading: false });\n\n        this.scrollDown();\n      });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  openLargePhoto = ({ target }) => {\n    const url = target.dataset.url;\n    this.setState({\n      largeUrl: url,\n    });\n  };\n\n  scrollDown = () => {\n    if (this.state.currentPage > 2) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  render() {\n    const { photos, showModal, largeUrl, isLoading, error } = this.state;\n    const shouldRenderLoadMoreButton = photos.length > 0 && !isLoading;\n\n    return (\n      <>\n        <Searchbar onSubmit={this.onChangeQuery} />\n        <ImageGallery\n          photos={photos}\n          openModal={this.toggleModal}\n          openLargePhoto={this.openLargePhoto}\n        />\n        {isLoading && (\n          <Loader\n            className=\"Loader\"\n            type=\"Audio\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n          />\n        )}\n        {error && (\n          <p className=\"error\">Whoops, something went wrong: {error.message}</p>\n        )}\n        {shouldRenderLoadMoreButton && <Button onClick={this.fetchPhotos} />}\n        {showModal && <Modal largeUrl={largeUrl} onClose={this.toggleModal} />}\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}